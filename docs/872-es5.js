!function(){function r(r,t){for(var e=0;e<t.length;e++){var a=t[e];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(r,a.key,a)}}!function(){"use strict";var t=function(){function t(r){var e=this;!function(r,t){if(!(r instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.matrix=r,this.rows=r.length,this.columns=r[0].length,r.forEach(function(r){if(r.length!=e.columns)throw new Error("Invalid matrix, not all columns of same size")})}var e,a,n;return e=t,n=[{key:"createBlankSquareMatrixFromDimensions",value:function(r){for(var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=[],n=0;n<r;n++){for(var i=[],o=0;o<r;o++)i.push(e&&n==o?1:0);a.push(i)}return new t(a)}},{key:"createBlankMatrix",value:function(r,e){for(var a=[],n=0;n<r;n++){for(var i=[],o=0;o<e;o++)i.push(0);a.push(i)}return new t(a)}},{key:"multiply",value:function(r,e){if(r.columns!=e.rows)throw new Error("Cannot multiply these two matrices together");for(var a=t.createBlankMatrix(r.rows,e.columns),n=0;n<r.rows;n++)for(var i=0;i<e.columns;i++){for(var o=0,s=0;s<r.columns;s++)o+=r.matrix[n][s]*e.matrix[s][i];a.matrix[n][i]=o}return a}},{key:"adjoint",value:function(r,e){if(1!=r.rows)for(var a=1,n=t.createBlankSquareMatrixFromDimensions(r.rows),i=0;i<r.rows;i++)for(var o=0;o<r.rows;o++)t.getCofactor(r,n,i,o,r.rows),a=(i+o)%2==0?1:-1,e.matrix[o][i]=a*t.getDeterminant(n,r.rows-1);else e.matrix[0][0]=1}},{key:"getCofactor",value:function(r,t,e,a,n){for(var i=0,o=0,s=0;s<n;s++)for(var u=0;u<n;u++)s!=e&&u!=a&&(t.matrix[i][o++]=r.matrix[s][u],o==n-1&&(o=0,i++))}},{key:"getDeterminant",value:function(r,e){var a=0;if(1==e)return r.matrix[0][0];for(var n=t.createBlankSquareMatrixFromDimensions(r.rows),i=1,o=0;o<e;o++)t.getCofactor(r,n,0,o,e),a+=i*r.matrix[0][o]*t.getDeterminant(n,e-1),i*=-1;return a}}],(a=[{key:"get",value:function(r,t){return this.matrix[r][t]}},{key:"multiply",value:function(r){return t.multiply(this,r)}},{key:"transpose",value:function(){for(var r=t.createBlankMatrix(this.columns,this.rows),e=0;e<r.rows;e++)for(var a=0;a<r.columns;a++)r.matrix[e][a]=this.matrix[a][e];return r}},{key:"isSquare",value:function(){return this.rows===this.columns}},{key:"inverse",value:function(){if(!this.isSquare())throw new Error("Can't get inverse of non-square matrix!");var r=t.createBlankSquareMatrixFromDimensions(this.rows),e=t.getDeterminant(this,this.rows);if(0==e)throw new Error("Matrix is singular, can't find inverse");var a=t.createBlankSquareMatrixFromDimensions(this.rows);t.adjoint(this,a);for(var n=0;n<this.rows;n++)for(var i=0;i<this.rows;i++)r.matrix[n][i]=a.matrix[n][i]/e;return r}}])&&r(e.prototype,a),n&&r(e,n),t}();addEventListener("message",function(r){var e=r.data,a=t.multiply(e.data.leftMatrix,e.data.rightMatrix);postMessage({result:a,dataIndex:e.dataIndex})})}()}();